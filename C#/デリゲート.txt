http://ufcpp.net/study/csharp/sp_delegate.html

・メソッドを代入するための変数の型である

・デリゲートがもっともよく使われる場面は「イベントハンドラ」である

・複数のメソッドを格納した状態のデリゲートのことを
　「マルチキャストデリゲート」と呼ぶ。


=======================================
非同期呼び出し（マルチスレッド）
=======================================
・デリゲート型を定義するとC#コンパイラによって自動的にBeginInvokeとEndInvoke
　というメソッドが生成される。
　BeginInvokeを用いることにより非同期呼び出しを開始し、
　EndInvoke を用いることにより非同期処理の終了を待つ事ができる。

・BeginInvokeはデリゲート型の定義時に引数リストで指定した引数と
　System.AsyncCallbackデリゲート型の引数およびobject型の引数をとり
　System.IAsyncResultインターフェース型の値を返します。
　また、EndInvoke はデリゲート型の定義時に ref または out キーワードを
　付けた引数および System.IAsyncResult インターフェース型の引数を持ち、
　デリゲートの戻り値と同じ型の戻り値を持ちます。 

※例）delegate int ShowMessage(int n, ref int p, out int q); という
　　　デリゲート型を定義した場合、以下のようなメソッド定義になる。

	IAsyncResult BeginInvoke(
	  int n, ref int p, out int q, AsyncCallback callback, object state);
	int EndInvoke(ref int p, out int q, IAsyncResult ar);


=======================================
共変性と反変性
=======================================
・基底クラスを戻り値とするデリゲートに対して、 派生クラスを戻り値とする
　メソッドを代入できることをコーバリアンス（共変性）という

・派生クラスを引数とするデリゲートに対して、 基底クラスを引数とするデリゲートを
　代入できることをコントラバリアンス（反変性）という

