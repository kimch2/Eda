
・従来はリフレクションを使っていた部分を簡略化できるもの
・匿名型（無形関数）の使い勝手が向上する
・dynamic型は実行時に型を解釈するためコンパイルエラーが起きない
・コンパイル時に定義を知らないオブジェクトが持つ情報にアクセスできる
・名前さえ一致していれば、どのクラスの定義でも、定義がなくてもアクセスできる
・動的言語との相互運用に便利
・つづりの間違いは実行するまでエラーにならない
・定義不要で扱えるためソースは短くなるが、性能面では静的な定義に劣る


