
・デリゲート（委託）とは、メソッドを参照するための型
　（デリゲート:メソッドを代入するための変数の型）

・イベントが起きたときのイベントハンドリングをどのメソッドに
　丸投げ（委託）するかを指示するためなどに使われます。

・クラス(static)メソッドとインスタンス(非static)メソッド
　どちらでも代入する事が出来ます

・+= 演算子を用いることで、複数のメソッドを代入する事ができる(マルチキャストデリゲート)

・もっともよく使われる場面は「イベントハンドラ」

・thunk（サンク）とは、A->Bではなく、A->thunk->Bのようにindirection (間接操作?)を実現するためのコード

=============================================================================
★一般的なデリゲート

// SomeDelegate という名前のデリゲート型を定義
delegate void SomeDelegate(int a);

class DelegateTest
{
  static void Main()
  {
    // SomeDelegate型の変数にメソッドを代入。
    SomeDelegate a = new SomeDelegate(A);

    a(256); // デリゲートを介してメソッドを呼び出す。
            // この例では A(256) が呼ばれる。
  }

=============================================================================
★インスタンスメソッドのデリゲート

 // インスタンスメソッドを代入。
    ShowMessage show = new ShowMessage(p.ShowName);

    show(); //実行

=============================================================================
★マルチキャストデリゲート

delegate void ShowMessage();

ShowMessage a = new ShowMessage(A);
    a += new ShowMessage(B);
    a += new ShowMessage(C);
    a(); //実行するとA→B→Cの順に呼ばれる



