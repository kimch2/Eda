
・2種類に大別される
　└インヘリタンス（継承）is-a
　　-------------------------------
　　※既存のクラスの属性を新規に作成したクラスに引き継がせること。
　　　既存のクラスを再利用できるため、プログラミング作業の効率の向上につながる。
　└コンポジション（移譲）has-a
　　-------------------------------
　　※あるクラスに別のクラスのオブジェクトを取り込んで扱うこと。
　　　delegateはコンポジションの応用であり、自分自身のオブジェクトを渡して別のクラスに処理を任せる

-------------------------
どう使い分けるか
-------------------------
一般的な物の考え方の一つに「分類」と「分割」がある。

分類とはA is a B.のことであり、日本語だと「AはBである」と表現できる。これをis-aの関係と呼ぶ。
例えば、「犬は動物である」「猫は動物である」「人間は動物である」等は分類で表現することが出来る。
★is-aの関係で表せるものは、継承で表現するのが都合がいい。
　
分割とはA has a B.のことであり、日本語だと「AはBを含んでいる」と表現できる。これをhas-aの関係と呼ぶ。
例えば、「パソコンはCPUを含んでいる」「学校は先生を含んでいる」「自転車はサドルを含んでいる」等は分割で表現することが出来る。
★has-aの関係で表せるものは、コンポジションで表現するのが都合がいい。

また、ほとんどのクラスで共通して使う処理は継承の方がいい
※例えばクラスA / B / C / D全てで「光らせる」という処理を必ず行うなら
　「光らせる」クラスを作り、A〜Dのクラス全てに継承させる。
　ただし、「明るく光らせる」「チカチカ光らせる」等を必要とするなら
　「明るく光らせる」クラス、「チカチカ光らせる」クラスなどクラスに分け、
　同じインターフェイスを背負わせてStrategyパターンにするなど、コンポジションにする方がいい

