
★クラスのフィールドなら常にヒープ(クラスが参照型だから)、
　値渡しの引数やローカル変数、構造体なら常にスタック(値型だから)

----------------
ヒープ領域
----------------
・参照型のデータが保存される
・動的にサイズが確保されるものが格納される(グローバル変数やmalloc関数やnew演算子など)
・1つのアプリで最大2GBまで確保できる
・先に確保したものから若いアドレスを持つ
・使われない領域はGCが自動で解放する

----------------
スタック領域
----------------
・値型のデータや参照型の参照情報（変数が保持しているデータ）が保存される
・ローカル変数や引数、戻り値などが格納される
・スタック領域のサイズは固定
・後に確保したものから若いアドレスを持つ
・変数が使われなくなると（スコープの範囲外に出ると）すぐに自動的に解放される

----------------
値型と参照型の違い
----------------
・参照型はnullになることがあるが値型はならない。ただし値型でもnull許容型の場合は、nullを代入することができる(int?とか)
・C#では、==を値型で使用すると値の等価を調べるが、参照型で使用するとString型などの一部の型を除いては参照の等価を調べる。
・値型をObject型に変換すると、ボックス化が実行される
・値型からは新しい型を派生させることができない
・値型には暗黙的に既定値を初期化する既定のコンストラクタが存在する。そのため、コンストラクタを宣言することができない

