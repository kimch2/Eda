シリアライズ:直列化するという意味する

俺のPCと枝のPCでデータをやりとりしているとする。
いま、Skypeで会話しているわけど
さて、俺が入力した文字列はコード上ではStringクラスに格納されて　
俺のPCのどこかのメモリ上にあるわけだけど
この俺のPCのメモリ上にあるStringクラスに枝がどうにかしてアクセスしないと　俺の入力した文字列はそっちからは見れないわけだ
さて、そんなことが可能か？

もちろん不可能だ、リモート越しに相手のPCのメモリを除くなんてことを許していたらハッキング天国だ
だから、俺のPC上にあるStringクラスはシリアライズ（直列化）という処理を行い
なんという名前のクラス（今回はStringクラス）にこのような入力（今回は俺が入力した文字列）が
有りました　という情報に一旦変更するんだ

この「俺のPCのメモリ上にある特定の情報を相手のPCに送信するために行う処理」をシリアライズという
シリアル化された情報を受け取った側でなんという名前のクラス（今回はStringクラス）このような入力（今回は俺が入力した文字列）
という情報を元に、今度は枝のPCのメモリ上に新しくStirngクラスをインスタンス化して、そのインスタンスが持つ値に
（今回は俺が入力した文字列）を設定する

この処理をデシリアライズ　という

このような　送信側によるシリアライズ、受信側によるデシリアライズを行うことで
TCP/IPを介してデータをやりとりしているにもかかわらず、コード上ではそれを意識せずに
相手のPCが入力した文字列のStringクラスがまるで、自分のPCにそのまま飛んできたような簡単さで使えるわけ

C#にデフォルトで用意されているStringクラスはどういう用途でどういう値が入るかを
.NET Frameworkは知っている
だから、どういうシリアライズをしていて
とんてきたデータに対してどういうデシリアライズをすればよいか知っているわけだ

さて、ではココで枝が自分で作ったクラスが有ったとしよう
そのクラスに設定されているフィールドの値などはどういうシリアライズをして送り
受け取った側はどういうデシリアライズを行い復元すればよいのか
それを、.NET Frameworkは知っていると思う？

当然、複数あるフィールドのうちTCP/IPで送受信する必要があるデータがどれで、
それをどのようにシリアライズするべきか、そしてシリアライズされているデータをどのようにデシリアライズするべきか

そんなことは .NET Fremeworkは知らないのさ

だからこそ、そういう場合はどれがシリアライズされるデータか、その場合どのようにシリアライズするのか、
そしてどのようにデシリアライズされるのかを定義してあげないといけない

つまり、このフィールドはシリアライズすると決めたのであれば、そのフィールドのシリアライズ処理と
デシリアライズ処理を実装する責務がプログラマに発生する

さらに、このようなTCP/IPで通信することを前提で考えるのであれば　送信側、受信側でバージョンが異なっていることにより、
データの解釈が間違わないように、GlobalUniqueIDを付加してチェックするとかそういうことを考えないといけない
それが、シリアライズをするという意味

