
抽象クラスとインターフェイスの違い

【抽象クラス　クラスの型(仕様)を定義するもの。カプセル化と多態性】
　①仕様と実装を分離して疎結合化するもの。IFと違い実装も記述できるため
　　共通する実装があればそれを記述して保証するため、IFではなく抽象クラスを使う事もある
　②定義した全てのプロパティとメソッドを記述する必要はない
　　派生クラスまでのどこかで定義すればよい
　③「抽象メソッドが存在する抽象クラス」を継承したサブクラスでは抽象メソッドをオーバーライドしなければならない

【インターフェイス　継承関係をもつ実装の再利用をできる。継承と多態性】
　①仕様と実装を分離して疎結合化するもの。実装は出来ない
　②定義した全てのプロパティとメソッドを記述しなければいけない
　③定義した全てのメソッド・プロパティは抽象メソッド(public abstract)となる

【共通仕様】
　・インスタンスは作れない


◆抽象化したいのがクラスであれば抽象クラス、単なる振る舞いに関する制約であれば interface、という感じで使い分ける


